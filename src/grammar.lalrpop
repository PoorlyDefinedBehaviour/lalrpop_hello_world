use std::str::FromStr;
use crate::ast::{Expr, Opcode};

grammar;

pub Expr: Box<Expr> = {
  <left: Expr> <op: ExprOp> <right: Factor> => Box::new(Expr::Op(left, op, right)),
  Factor
}

ExprOp: Opcode = {
  "+" => Opcode::Add,
  "-" => Opcode::Sub,
}

Factor: Box<Expr> = {
  <left: Factor> <op: FactorOp> <right: Term> => Box::new(Expr::Op(left, op, right)),
  Term
}

FactorOp: Opcode = {
  "*" => Opcode::Mul,
  "/" => Opcode::Div,
}

Term: Box<Expr> = {
  <n: Num> => Box::new(Expr::Number(n)),
  "(" <Expr> ")"
}

Num: i32 = <s: r"[0-9]+"> => i32::from_str(s).unwrap();
